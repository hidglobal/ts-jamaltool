{"version":3,"file":"toCSS.js","names":["isBoxedPrimitive","unitless","isCSSPropertyValue","o","Number","isFinite","isCSSable","Array","isArray","every","Object","values","hyphenate","s","startsWith","replace","match","p1","toLowerCase","toCSS","map","join","valueOf","toString","entries","filter","value","key","p2","p3"],"sources":["../../src/utils/toCSS.ts"],"sourcesContent":["import type { CSSPropertyValue, CSSable } from '../types';\n\nimport isBoxedPrimitive from './isBoxedPrimitive';\nimport { unitless } from './units';\n\nconst isCSSPropertyValue = (o: unknown): o is CSSPropertyValue => {\n  return (\n    isBoxedPrimitive(o) ||\n    typeof o === 'string' ||\n    (typeof o === 'number' && Number.isFinite(o))\n  );\n};\n\nexport const isCSSable = (o: unknown): o is CSSable => {\n  if (isCSSPropertyValue(o)) {\n    return true;\n  }\n\n  if (Array.isArray(o)) {\n    return o.every(isCSSable);\n  }\n\n  if (typeof o === 'object') {\n    return o !== null && Object.values(o).every(isCSSable);\n  }\n\n  return false;\n};\n\nconst hyphenate = (s: string) => {\n  if (s.startsWith('--')) {\n    // It's a custom property which is already well formatted.\n    return s;\n  }\n  return (\n    s\n      // Hyphenate CSS property names from camelCase version from JS string\n      .replace(/([A-Z])/g, (match, p1) => `-${p1.toLowerCase()}`)\n      // Special case for `-ms` because in JS it starts with `ms` unlike `Webkit`\n      .replace(/^ms-/, '-ms-')\n  );\n};\n\n// Some tools such as polished.js output JS objects\n// To support them transparently, we convert JS objects to CSS strings\nexport default function toCSS(o: CSSable): string {\n  if (Array.isArray(o)) {\n    return o.map(toCSS).join('\\n');\n  }\n\n  if (isCSSPropertyValue(o)) {\n    return o.valueOf().toString();\n  }\n\n  return Object.entries(o)\n    .filter(\n      ([, value]) =>\n        // Ignore all falsy values except numbers\n        typeof value === 'number' || value\n    )\n    .map(([key, value]) => {\n      if (!isCSSPropertyValue(value)) {\n        return `${key} { ${toCSS(value)} }`;\n      }\n\n      return `${hyphenate(key)}: ${\n        typeof value === 'number' &&\n        value !== 0 &&\n        // Strip vendor prefixes when checking if the value is unitless\n        !(\n          key.replace(\n            /^(Webkit|Moz|O|ms)([A-Z])(.+)$/,\n            (match, p1, p2, p3) => `${p2.toLowerCase()}${p3}`\n          ) in unitless\n        )\n          ? `${value}px`\n          : value\n      };`;\n    })\n    .join(' ');\n}\n"],"mappings":"AAEA,OAAOA,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,QAAQ,QAAQ,SAAS;AAElC,MAAMC,kBAAkB,GAAIC,CAAU,IAA4B;EAChE,OACEH,gBAAgB,CAACG,CAAC,CAAC,IACnB,OAAOA,CAAC,KAAK,QAAQ,IACpB,OAAOA,CAAC,KAAK,QAAQ,IAAIC,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAE;AAEjD,CAAC;AAED,OAAO,MAAMG,SAAS,GAAIH,CAAU,IAAmB;EACrD,IAAID,kBAAkB,CAACC,CAAC,CAAC,EAAE;IACzB,OAAO,IAAI;EACb;EAEA,IAAII,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,EAAE;IACpB,OAAOA,CAAC,CAACM,KAAK,CAACH,SAAS,CAAC;EAC3B;EAEA,IAAI,OAAOH,CAAC,KAAK,QAAQ,EAAE;IACzB,OAAOA,CAAC,KAAK,IAAI,IAAIO,MAAM,CAACC,MAAM,CAACR,CAAC,CAAC,CAACM,KAAK,CAACH,SAAS,CAAC;EACxD;EAEA,OAAO,KAAK;AACd,CAAC;AAED,MAAMM,SAAS,GAAIC,CAAS,IAAK;EAC/B,IAAIA,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;IACtB;IACA,OAAOD,CAAC;EACV;EACA,OACEA;EACE;EAAA,CACCE,OAAO,CAAC,UAAU,EAAE,CAACC,KAAK,EAAEC,EAAE,KAAM,IAAGA,EAAE,CAACC,WAAW,EAAG,EAAC;EAC1D;EAAA,CACCH,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;AAE9B,CAAC;;AAED;AACA;AACA,eAAe,SAASI,KAAK,CAAChB,CAAU,EAAU;EAChD,IAAII,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,EAAE;IACpB,OAAOA,CAAC,CAACiB,GAAG,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;EAChC;EAEA,IAAInB,kBAAkB,CAACC,CAAC,CAAC,EAAE;IACzB,OAAOA,CAAC,CAACmB,OAAO,EAAE,CAACC,QAAQ,EAAE;EAC/B;EAEA,OAAOb,MAAM,CAACc,OAAO,CAACrB,CAAC,CAAC,CACrBsB,MAAM,CACL,CAAC,GAAGC,KAAK,CAAC;EACR;EACA,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CACrC,CACAN,GAAG,CAAC,CAAC,CAACO,GAAG,EAAED,KAAK,CAAC,KAAK;IACrB,IAAI,CAACxB,kBAAkB,CAACwB,KAAK,CAAC,EAAE;MAC9B,OAAQ,GAAEC,GAAI,MAAKR,KAAK,CAACO,KAAK,CAAE,IAAG;IACrC;IAEA,OAAQ,GAAEd,SAAS,CAACe,GAAG,CAAE,KACvB,OAAOD,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,CAAC;IACX;IACA,EACEC,GAAG,CAACZ,OAAO,CACT,gCAAgC,EAChC,CAACC,KAAK,EAAEC,EAAE,EAAEW,EAAE,EAAEC,EAAE,KAAM,GAAED,EAAE,CAACV,WAAW,EAAG,GAAEW,EAAG,EAAC,CAClD,IAAI5B,QAAQ,CACd,GACI,GAAEyB,KAAM,IAAG,GACZA,KACL,GAAE;EACL,CAAC,CAAC,CACDL,IAAI,CAAC,GAAG,CAAC;AACd"}