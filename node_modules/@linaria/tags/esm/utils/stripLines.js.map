{"version":3,"file":"stripLines.js","names":["stripLines","loc","text","result","String","replace","trim","start","line","end","repeat","column"],"sources":["../../src/utils/stripLines.ts"],"sourcesContent":["import type { Location } from '../types';\n\n// Stripping away the new lines ensures that we preserve line numbers\n// This is useful in case of tools such as the stylelint pre-processor\n// This should be safe because strings cannot contain newline: https://www.w3.org/TR/CSS2/syndata.html#strings\nexport default function stripLines(\n  loc: { end: Location; start: Location },\n  text: string | number\n) {\n  let result = String(text)\n    .replace(/[\\r\\n]+/g, ' ')\n    .trim();\n\n  // If the start and end line numbers aren't same, add new lines to span the text across multiple lines\n  if (loc.start.line !== loc.end.line) {\n    result += '\\n'.repeat(loc.end.line - loc.start.line);\n\n    // Add extra spaces to offset the column\n    result += ' '.repeat(loc.end.column);\n  }\n\n  return result;\n}\n"],"mappings":"AAEA;AACA;AACA;AACA,eAAe,SAASA,UAAU,CAChCC,GAAuC,EACvCC,IAAqB,EACrB;EACA,IAAIC,MAAM,GAAGC,MAAM,CAACF,IAAI,CAAC,CACtBG,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CACxBC,IAAI,EAAE;;EAET;EACA,IAAIL,GAAG,CAACM,KAAK,CAACC,IAAI,KAAKP,GAAG,CAACQ,GAAG,CAACD,IAAI,EAAE;IACnCL,MAAM,IAAI,IAAI,CAACO,MAAM,CAACT,GAAG,CAACQ,GAAG,CAACD,IAAI,GAAGP,GAAG,CAACM,KAAK,CAACC,IAAI,CAAC;;IAEpD;IACAL,MAAM,IAAI,GAAG,CAACO,MAAM,CAACT,GAAG,CAACQ,GAAG,CAACE,MAAM,CAAC;EACtC;EAEA,OAAOR,MAAM;AACf"}