{"version":3,"file":"types.js","names":[],"sources":["../../src/options/types.ts"],"sourcesContent":["import type { TransformOptions } from '@babel/core';\n\nimport type { IVariableContext } from '../IVariableContext';\nimport type { Core } from '../babel';\n\nexport type ClassNameSlugVars = {\n  dir: string;\n  ext: string;\n  file: string;\n  hash: string;\n  name: string;\n  title: string;\n};\n\nexport type ClassNameFn = (\n  hash: string,\n  title: string,\n  args: ClassNameSlugVars\n) => string;\n\nexport type VariableNameFn = (context: IVariableContext) => string;\n\nexport type Evaluator = (\n  filename: string,\n  options: StrictOptions,\n  text: string,\n  only: string[] | null,\n  babel: Core\n) => [string, Map<string, string[]> | null];\n\nexport type EvalRule = {\n  action: Evaluator | 'ignore' | string;\n  babelOptions?: TransformOptions;\n  test?: RegExp | ((path: string, code: string) => boolean);\n};\n\nexport type StrictOptions = {\n  babelOptions: TransformOptions;\n  classNameSlug?: string | ClassNameFn;\n  displayName: boolean;\n  evaluate: boolean;\n  extensions: string[];\n  ignore?: RegExp;\n  rules: EvalRule[];\n  tagResolver?: (source: string, tag: string) => string | null;\n  variableNameConfig?: 'var' | 'dashes' | 'raw';\n  variableNameSlug?: string | VariableNameFn;\n};\n"],"mappings":""}