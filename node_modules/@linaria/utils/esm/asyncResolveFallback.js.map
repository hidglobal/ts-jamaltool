{"version":3,"file":"asyncResolveFallback.js","names":["path","safeResolve","name","where","require","resolve","paths","e","suffixes","reduce","acc","ext","push","syncResolve","what","importer","stack","map","p","dirname","resolved","Error","suffix","resolvedWithSuffix","asyncResolve","Promise"],"sources":["../src/asyncResolveFallback.ts"],"sourcesContent":["import path from 'path';\n\nconst safeResolve = (name: string, where: string[]): string | Error => {\n  try {\n    return require.resolve(name, {\n      paths: where,\n    });\n  } catch (e: unknown) {\n    return e as Error;\n  }\n};\n\nconst suffixes = ['.js', '.ts', '.jsx', '.tsx'].reduce((acc: string[], ext) => {\n  acc.push(`/index${ext}`);\n  acc.push(ext);\n  return acc;\n}, []);\n\nexport const syncResolve = (\n  what: string,\n  importer: string,\n  stack: string[]\n): string => {\n  const where = [importer, ...stack].map((p) => path.dirname(p));\n  const resolved = safeResolve(what, where);\n  if (!(resolved instanceof Error)) {\n    return resolved;\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const suffix of suffixes) {\n    const resolvedWithSuffix = safeResolve(what + suffix, where);\n    if (resolvedWithSuffix instanceof Error) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    return resolvedWithSuffix;\n  }\n\n  throw resolved;\n};\n\nconst asyncResolve = (\n  what: string,\n  importer: string,\n  stack: string[]\n): Promise<string> => {\n  const where = [importer, ...stack].map((p) => path.dirname(p));\n  const resolved = safeResolve(what, where);\n  if (!(resolved instanceof Error)) {\n    return Promise.resolve(resolved);\n  }\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const suffix of suffixes) {\n    const resolvedWithSuffix = safeResolve(what + suffix, where);\n    if (resolvedWithSuffix instanceof Error) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    return Promise.resolve(resolvedWithSuffix);\n  }\n\n  throw resolved;\n};\n\nexport default asyncResolve;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,MAAMC,WAAW,GAAG,CAACC,IAAY,EAAEC,KAAe,KAAqB;EACrE,IAAI;IACF,OAAOC,OAAO,CAACC,OAAO,CAACH,IAAI,EAAE;MAC3BI,KAAK,EAAEH;IACT,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,CAAU,EAAE;IACnB,OAAOA,CAAC;EACV;AACF,CAAC;AAED,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAACC,MAAM,CAAC,CAACC,GAAa,EAAEC,GAAG,KAAK;EAC7ED,GAAG,CAACE,IAAI,CAAE,SAAQD,GAAI,EAAC,CAAC;EACxBD,GAAG,CAACE,IAAI,CAACD,GAAG,CAAC;EACb,OAAOD,GAAG;AACZ,CAAC,EAAE,EAAE,CAAC;AAEN,OAAO,MAAMG,WAAW,GAAG,CACzBC,IAAY,EACZC,QAAgB,EAChBC,KAAe,KACJ;EACX,MAAMb,KAAK,GAAG,CAACY,QAAQ,EAAE,GAAGC,KAAK,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKlB,IAAI,CAACmB,OAAO,CAACD,CAAC,CAAC,CAAC;EAC9D,MAAME,QAAQ,GAAGnB,WAAW,CAACa,IAAI,EAAEX,KAAK,CAAC;EACzC,IAAI,EAAEiB,QAAQ,YAAYC,KAAK,CAAC,EAAE;IAChC,OAAOD,QAAQ;EACjB;;EAEA;EACA,KAAK,MAAME,MAAM,IAAId,QAAQ,EAAE;IAC7B,MAAMe,kBAAkB,GAAGtB,WAAW,CAACa,IAAI,GAAGQ,MAAM,EAAEnB,KAAK,CAAC;IAC5D,IAAIoB,kBAAkB,YAAYF,KAAK,EAAE;MACvC;MACA;IACF;IAEA,OAAOE,kBAAkB;EAC3B;EAEA,MAAMH,QAAQ;AAChB,CAAC;AAED,MAAMI,YAAY,GAAG,CACnBV,IAAY,EACZC,QAAgB,EAChBC,KAAe,KACK;EACpB,MAAMb,KAAK,GAAG,CAACY,QAAQ,EAAE,GAAGC,KAAK,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKlB,IAAI,CAACmB,OAAO,CAACD,CAAC,CAAC,CAAC;EAC9D,MAAME,QAAQ,GAAGnB,WAAW,CAACa,IAAI,EAAEX,KAAK,CAAC;EACzC,IAAI,EAAEiB,QAAQ,YAAYC,KAAK,CAAC,EAAE;IAChC,OAAOI,OAAO,CAACpB,OAAO,CAACe,QAAQ,CAAC;EAClC;;EAEA;EACA,KAAK,MAAME,MAAM,IAAId,QAAQ,EAAE;IAC7B,MAAMe,kBAAkB,GAAGtB,WAAW,CAACa,IAAI,GAAGQ,MAAM,EAAEnB,KAAK,CAAC;IAC5D,IAAIoB,kBAAkB,YAAYF,KAAK,EAAE;MACvC;MACA;IACF;IAEA,OAAOI,OAAO,CAACpB,OAAO,CAACkB,kBAAkB,CAAC;EAC5C;EAEA,MAAMH,QAAQ;AAChB,CAAC;AAED,eAAeI,YAAY"}