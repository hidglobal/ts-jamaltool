{"version":3,"file":"buildOptions.js","names":["cache","WeakMap","merge","a","b","has","set","cacheForA","get","result","babelMerge","buildOptions","configs","map","i","filter","isNotNull","reduce"],"sources":["../../src/options/buildOptions.ts"],"sourcesContent":["import type { TransformOptions } from '@babel/core';\nimport babelMerge from 'babel-merge';\n\nimport isNotNull from '../isNotNull';\n\nconst cache = new WeakMap<\n  TransformOptions,\n  WeakMap<TransformOptions, TransformOptions>\n>();\n\nconst merge = (a: TransformOptions, b: TransformOptions) => {\n  if (!cache.has(a)) {\n    cache.set(a, new WeakMap());\n  }\n\n  const cacheForA = cache.get(a)!;\n  if (cacheForA.has(b)) {\n    return cacheForA.get(b)!;\n  }\n\n  const result = babelMerge(a, b);\n  cacheForA.set(b, result);\n  return result;\n};\n\n/**\n * Merges babel configs together. If a pair of configs were merged before,\n * it will return the cached result.\n */\nexport default function buildOptions(\n  ...configs: (TransformOptions | null | undefined)[]\n): TransformOptions {\n  // Merge all configs together\n  return configs\n    .map((i) => i ?? null)\n    .filter(isNotNull)\n    .reduce(merge);\n}\n"],"mappings":";;;;;;AACA;AAEA;AAAqC;AAErC,MAAMA,KAAK,GAAG,IAAIC,OAAO,EAGtB;AAEH,MAAMC,KAAK,GAAG,CAACC,CAAmB,EAAEC,CAAmB,KAAK;EAC1D,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACF,CAAC,CAAC,EAAE;IACjBH,KAAK,CAACM,GAAG,CAACH,CAAC,EAAE,IAAIF,OAAO,EAAE,CAAC;EAC7B;EAEA,MAAMM,SAAS,GAAGP,KAAK,CAACQ,GAAG,CAACL,CAAC,CAAE;EAC/B,IAAII,SAAS,CAACF,GAAG,CAACD,CAAC,CAAC,EAAE;IACpB,OAAOG,SAAS,CAACC,GAAG,CAACJ,CAAC,CAAC;EACzB;EAEA,MAAMK,MAAM,GAAG,IAAAC,mBAAU,EAACP,CAAC,EAAEC,CAAC,CAAC;EAC/BG,SAAS,CAACD,GAAG,CAACF,CAAC,EAAEK,MAAM,CAAC;EACxB,OAAOA,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACe,SAASE,YAAY,CAClC,GAAGC,OAAgD,EACjC;EAClB;EACA,OAAOA,OAAO,CACXC,GAAG,CAAEC,CAAC,IAAKA,CAAC,aAADA,CAAC,cAADA,CAAC,GAAI,IAAI,CAAC,CACrBC,MAAM,CAACC,kBAAS,CAAC,CACjBC,MAAM,CAACf,KAAK,CAAC;AAClB"}