{"ast":null,"code":"import { useQueue, randomId } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction useNotificationsState(_ref) {\n  let {\n    limit\n  } = _ref;\n  const {\n    state,\n    queue,\n    update,\n    cleanQueue\n  } = useQueue({\n    initialValues: [],\n    limit\n  });\n  const showNotification = notification => {\n    const id = notification.id || randomId();\n    update(notifications => {\n      if (notification.id && notifications.some(n => n.id === notification.id)) {\n        return notifications;\n      }\n      return [...notifications, __spreadProps(__spreadValues({}, notification), {\n        id\n      })];\n    });\n    return id;\n  };\n  const updateNotification = notification => update(notifications => {\n    const index = notifications.findIndex(n => n.id === notification.id);\n    if (index === -1) {\n      return notifications;\n    }\n    const newNotifications = [...notifications];\n    newNotifications[index] = notification;\n    return newNotifications;\n  });\n  const hideNotification = id => update(notifications => notifications.filter(notification => {\n    if (notification.id === id) {\n      typeof notification.onClose === \"function\" && notification.onClose(notification);\n      return false;\n    }\n    return true;\n  }));\n  const clean = () => update(() => []);\n  return {\n    notifications: state,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    cleanQueue,\n    clean\n  };\n}\nexport default useNotificationsState;","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useNotificationsState","_ref","limit","state","queue","update","cleanQueue","useQueue","initialValues","showNotification","notification","id","randomId","notifications","some","n","updateNotification","index","findIndex","newNotifications","hideNotification","filter","onClose","clean"],"sources":["C:\\Users\\mohjam\\Desktop\\HIDiag-master\\node_modules\\@mantine\\notifications\\src\\Notifications\\use-notifications-state\\use-notifications-state.ts"],"sourcesContent":["import { useQueue, randomId } from '@mantine/hooks';\nimport { NotificationProps } from '../../types';\n\nexport default function useNotificationsState({ limit }: { limit: number }) {\n  const { state, queue, update, cleanQueue } = useQueue<NotificationProps>({\n    initialValues: [],\n    limit,\n  });\n\n  const showNotification = (notification: NotificationProps) => {\n    const id = notification.id || randomId();\n\n    update((notifications) => {\n      if (notification.id && notifications.some((n) => n.id === notification.id)) {\n        return notifications;\n      }\n\n      return [...notifications, { ...notification, id }];\n    });\n\n    return id;\n  };\n\n  const updateNotification = (notification: NotificationProps) =>\n    update((notifications) => {\n      const index = notifications.findIndex((n) => n.id === notification.id);\n\n      if (index === -1) {\n        return notifications;\n      }\n\n      const newNotifications = [...notifications];\n      newNotifications[index] = notification;\n\n      return newNotifications;\n    });\n\n  const hideNotification = (id: string) =>\n    update((notifications) =>\n      notifications.filter((notification) => {\n        if (notification.id === id) {\n          typeof notification.onClose === 'function' && notification.onClose(notification);\n          return false;\n        }\n\n        return true;\n      })\n    );\n\n  const clean = () => update(() => []);\n\n  return {\n    notifications: state,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    cleanQueue,\n    clean,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}