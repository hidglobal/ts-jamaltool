{"ast":null,"code":"import { clearListState } from './clear-list-state.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nfunction getIndexFromKeyAfterPath(key, path) {\n  const split = key.substring(path.length + 1).split(\".\")[0];\n  return parseInt(split, 10);\n}\nfunction changeErrorIndices(path, index, errors, change) {\n  if (index === void 0) {\n    return errors;\n  }\n  const pathString = `${String(path)}`;\n  let clearedErrors = errors;\n  if (change === -1) {\n    clearedErrors = clearListState(`${pathString}.${index}`, clearedErrors);\n  }\n  const cloned = __spreadValues({}, clearedErrors);\n  const changedKeys = new Set();\n  Object.entries(clearedErrors).filter(_ref => {\n    let [key] = _ref;\n    if (!key.startsWith(`${pathString}.`)) {\n      return false;\n    }\n    const currIndex = getIndexFromKeyAfterPath(key, pathString);\n    if (Number.isNaN(currIndex)) {\n      return false;\n    }\n    return currIndex >= index;\n  }).forEach(_ref2 => {\n    let [key, value] = _ref2;\n    const currIndex = getIndexFromKeyAfterPath(key, pathString);\n    const newKey = key.replace(`${pathString}.${currIndex}`, `${pathString}.${currIndex + change}`);\n    cloned[newKey] = value;\n    changedKeys.add(newKey);\n    if (!changedKeys.has(key)) {\n      delete cloned[key];\n    }\n  });\n  return cloned;\n}\nexport { changeErrorIndices };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","getIndexFromKeyAfterPath","path","split","substring","length","parseInt","changeErrorIndices","index","errors","change","pathString","String","clearedErrors","clearListState","cloned","changedKeys","Set","entries","filter","_ref","startsWith","currIndex","Number","isNaN","forEach","_ref2","newKey","replace","add","has"],"sources":["C:\\Users\\mohjam\\Desktop\\HIDiag-master\\node_modules\\@mantine\\form\\src\\lists\\change-error-indices.ts"],"sourcesContent":["import { clearListState } from './clear-list-state';\n\n/**\n * Gets the part of the key after the path which can be an index\n */\nfunction getIndexFromKeyAfterPath(key: string, path: string): number {\n  const split = key.substring(path.length + 1).split('.')[0];\n  return parseInt(split, 10);\n}\n\n/**\n * Changes the indices of every error that is after the given `index` with the given `change` at the given `path`.\n * This requires that the errors are in the format of `path.index` and that the index is a number.\n */\nexport function changeErrorIndices<T extends Record<PropertyKey, any>>(\n  path: PropertyKey,\n  index: number,\n  errors: T,\n  change: 1 | -1\n): T {\n  if (index === undefined) {\n    return errors;\n  }\n  const pathString = `${String(path)}`;\n  let clearedErrors = errors;\n  // Remove all errors if the corresponding item was removed\n  if (change === -1) {\n    clearedErrors = clearListState(`${pathString}.${index}`, clearedErrors);\n  }\n\n  const cloned = { ...clearedErrors };\n  const changedKeys = new Set<string>();\n  Object.entries(clearedErrors)\n    .filter(([key]) => {\n      if (!key.startsWith(`${pathString}.`)) {\n        return false;\n      }\n      const currIndex = getIndexFromKeyAfterPath(key, pathString);\n      if (Number.isNaN(currIndex)) {\n        return false;\n      }\n      return currIndex >= index;\n    })\n    .forEach(([key, value]) => {\n      const currIndex = getIndexFromKeyAfterPath(key, pathString);\n\n      const newKey: keyof T = key.replace(\n        `${pathString}.${currIndex}`,\n        `${pathString}.${currIndex + change}`\n      );\n      cloned[newKey] = value;\n      changedKeys.add(newKey);\n      if (!changedKeys.has(key)) {\n        delete cloned[key];\n      }\n    });\n\n  return cloned;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}